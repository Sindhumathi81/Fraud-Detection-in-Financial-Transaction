# -*- coding: utf-8 -*-
"""Fraud Detection in Financial Transaction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n3p6v0YODAohNHkwx_TWppUzmO1KXcvQ
"""

import pandas as pd
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/content/transaction_metadata.csv')

print(df.head())

print(df.describe())

df = df.drop(['TransactionID', 'Timestamp'], axis=1)

df.fillna(df.median(), inplace=True)

label_encoder = LabelEncoder()
df['MerchantID'] = label_encoder.fit_transform(df['MerchantID'])

X = df.drop('MerchantID', axis=1)
y = df['MerchantID']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)

plt.figure(figsize=(8, 6))
sns.countplot(x='MerchantID', data=df)

plt.xlabel('MerchantID')
plt.ylabel('Count')
plt.show()

plt.figure(figsize=(10, 8))
sns.heatmap(df.corr(), annot=True)
plt.title('Correlation Heatmap')
plt.show()

# Check if X_train has any data
if X_train.empty:
    print("X_train is empty. Check your data processing steps.")
else:
    scaler = StandardScaler()
    X_train_scaled = scaler.fit_transform(X_train)
    X_test_scaled = scaler.transform(X_test)

plt.figure(figsize=(5, 8))
sns.heatmap(df.corr(), annot=True)
plt.title('Correlation Heatmap')
plt.show()